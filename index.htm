<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 /> 
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui' />
<title>GulaMza</title>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css">
<link rel="stylesheet" href="css/Leaflet.PolylineMeasure.css">
<script type="text/javascript" src="http://www.ign.gob.ar/argenmap2/argenmap.jquery/argenmap.jquery.min.js"></script>
<style type="text/css">	
 <!-- html, body {
			height: 100%;
			margin: 0;
		}
	.leaflet-control-attribution.leaflet-control {
			font-size: 12px;
		}-->
		.leaflet-control-attribution.leaflet-control a:hover {color:#800080}
	<!--.logogc{position:absolute;z-index:2;top:5px;right:350px}-->
</style>
<style>
    h1 { color: #200080;}
</style>	

</head>
<body> 
<h1 style="position: relative; margin-top: -3px; margin-left: 20px; z-index: 2">Mapa Gulero</h1>
<div id="map" class="map map-home" style="margin:6px 0 8px 0;height:385px;"></div> 
<script src="https://unpkg.com/leaflet@1.0.3/dist/leaflet.js"></script>
<script src="scripts/Leaflet.PolylineMeasure.js"></script>
<script type="text/javascript" src="scripts/.js"></script>
<script type="text/javascript" src="scripts/Helados.js"></script>
<script type="text/javascript" src="scripts/Cafeterias.js"></script>
<script type="text/javascript" src="scripts/Cervecerias.js"></script>
<script type="text/javascript" src="scripts/Sushi.js"></script>
<script type="text/javascript" src="scripts/EntrePanes.js"></script>
<script type="text/javascript" src="scripts/alplato.js"></script>
<script type="text/javascript" src="scripts/Tragos.js"></script>
<script type="text/javascript" src="scripts/Vino.js"></script>
<script type="text/javascript" src="scripts/Pastas.js"></script>
<script type="text/javascript" src="scripts/Pizza.js"></script>
<script type="text/javascript" src="scripts/Panaderia.js"></script>
<script type="text/javascript" src="scripts/Carnes.js"></script>
<script type="text/javascript" src="scripts/Vegano.js"></script>
<script type="text/javascript" src="scripts/Alfajor.js"></script>
<script src="scripts/leaflet-tilelayer-wmts.js"></script>

<script src="https://unpkg.com/leaflet.markercluster@1.1.0/dist/leaflet.markercluster.js"></script>
<script>
/*Argenmap*/
var mapabase_argenmap = new L.TileLayer.WMTS( 'https://wms.ign.gob.ar/geoserver/capabaseargenmap/gwc/service/wmts?' ,
                               {
                                   layer: 'capabaseargenmap',
                                   style: "normal",
                                   tilematrixSet: "EPSG:3857",
                                   format: "image/png",
                                   attribution: " <a href='https://www.ign.gob.ar/AreaServicios/Argenmap/IntroduccionV2'> IGN - Argenmap v2 </a> | <a href='https://www.instagram.com/gula_mza'>Gula </a> | <a href='https://iconos8.es/'>Icons8 </a> | <a href='https://github.com/mylen/leaflet.TileLayer.WMTS'>GitHub</a>&copy " 
                               }
                              );
/* ICONOS */
	var iconoComun = L.Icon.extend({
		options: {
			shadowUrl: 'img/marker-shadow.png',
			iconSize:     [22, 22],
			shadowSize:   [22, 22],
			iconAnchor:   [12, 12],
			popupAnchor:  [1, -34]
		}
	});

	
    var iconocarne = new iconoComun({iconUrl:'img/market-icon-2x-carne.png'});
		iconocerveza = new iconoComun({iconUrl:'img/market-icon-2x-cerveza.png'});
		iconohelado= new iconoComun({iconUrl:'img/market-icon-2x-helado.png'});
		iconocafe= new iconoComun({iconUrl:'img/market-icon-2x-cafe.png'});
		iconosushi= new iconoComun({iconUrl:'img/market-icon-2x-sushi.png'});
		iconoentrepanes= new iconoComun({iconUrl:'img/market-icon-2x-entrepanes.png'});
		iconovino= new iconoComun({iconUrl:'img/market-icon-2x-vino.png'});
		iconoalplato= new iconoComun({iconUrl:'img/market-icon-2x-alplato.png'});
		iconovegano= new iconoComun({iconUrl:'img/market-icon-2x-vegano.png'});
		iconoalfajor= new iconoComun({iconUrl:'img/market-icon-2x-alfajor.png'});
		iconopanaderia= new iconoComun({iconUrl:'img/market-icon-2x-panaderia.png'});
		iconococktail= new iconoComun({iconUrl:'img/market-icon-2x-cocktail.png'});
		iconopastas= new iconoComun({iconUrl:'img/market-icon-2x-pastas.png'});
		iconopizza= new iconoComun({iconUrl:'img/market-icon-2x-pizza.png'});
	  
	   
	
	function crearIconohelado (feature, latlng) {
		return L.marker(latlng, { icon: iconohelado })
	}

        var asignarIconohelado = {
	  pointToLayer: crearIconohelado
	}
	
	function crearIconocerveza (feature, latlng) {
		return L.marker(latlng, { icon: iconocerveza })
	}

        var asignarIconocerveza = {
	  pointToLayer: crearIconocerveza
	}
	
	function crearIconocafe (feature, latlng) {
		return L.marker(latlng, { icon: iconocafe })
	}

        var asignarIconocafe = {
	  pointToLayer: crearIconocafe
	}
	
	function crearIconosushi (feature, latlng) {
		return L.marker(latlng, { icon: iconosushi })
	}

        var asignarIconosushi = {
	  pointToLayer: crearIconosushi
	}
	
	function crearIconoentrepanes (feature, latlng) {
		return L.marker(latlng, { icon: iconoentrepanes })
	}

        var asignarIconoentrepanes = {
	  pointToLayer: crearIconoentrepanes
	}
	
	function crearIconovino (feature, latlng) {
		return L.marker(latlng, { icon: iconovino })
	}

        var asignarIconovino = {
	  pointToLayer: crearIconovino
	}
    
    function crearIconoalplato (feature, latlng) {
		return L.marker(latlng, { icon: iconoalplato })
	}

        var asignarIconoalplato = {
	  pointToLayer: crearIconoalplato
	}
	
	function crearIconoalfajor (feature, latlng) {
		return L.marker(latlng, { icon: iconoalfajor })
	}

        var asignarIconoalfajor = {
	  pointToLayer: crearIconoalfajor
	}
		
	function crearIconococktail (feature, latlng) {
		return L.marker(latlng, { icon: iconococktail })
	}

        var asignarIconococktail = {
	  pointToLayer: crearIconococktail
	}
	
	function crearIconopanaderia (feature, latlng) {
		return L.marker(latlng, { icon: iconopanaderia })
	}

        var asignarIconopanaderia = {
	  pointToLayer: crearIconopanaderia
	}
	
	function crearIconovegano (feature, latlng) {
		return L.marker(latlng, { icon: iconovegano })
	}

        var asignarIconovegano = {
	  pointToLayer: crearIconovegano
	}
	
	function crearIconopastas (feature, latlng) {
		return L.marker(latlng, { icon: iconopastas })
	}

        var asignarIconopastas = {
	  pointToLayer: crearIconopastas
	}
	
	function crearIconopizza (feature, latlng) {
		return L.marker(latlng, { icon: iconopizza })
	}

        var asignarIconopizza = {
	  pointToLayer: crearIconopizza
	}
	
	function crearIconocarne (feature, latlng) {
		return L.marker(latlng, { icon: iconocarne })
	}

        var asignarIconocarne = {
	  pointToLayer: crearIconocarne
	}
	
	
     /* POPUPS */
	
    function agregarPopupfarmacias(feature, layer) { 
		if (feature.properties && feature.properties.Nombre) { 
				layer.bindPopup( "<strong>" + feature.properties.Nombre + "</strong><br/>" + feature.properties.Descrip); 
		} 
	}
	
	
/* BASE LAYERS */
	var osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
		osmAttrib = '&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors',
		mapabase_osm = L.tileLayer(osmUrl, {maxZoom: 20, attribution: osmAttrib});
	var otUrl = 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
		otAttrib = 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)',
		mapabase_ot = L.tileLayer(otUrl, {maxZoom: 20, attribution: otAttrib});
	
/* OVERLAYS Y GRUPOS */
	var hela= L.geoJson(Helados, { pointToLayer: crearIconohelado, onEachFeature: agregarPopupfarmacias});
	 cafe= L.geoJson(Cafeterias, { pointToLayer: crearIconocafe, onEachFeature: agregarPopupfarmacias});
	 cerv= L.geoJson(Cervecerias, { pointToLayer: crearIconocerveza, onEachFeature: agregarPopupfarmacias});
	 sush= L.geoJson(Sushi, { pointToLayer: crearIconosushi, onEachFeature: agregarPopupfarmacias});
	 lomo= L.geoJson(EntrePanes, { pointToLayer: crearIconoentrepanes, onEachFeature: agregarPopupfarmacias});
	 vin= L.geoJson(Vino, { pointToLayer: crearIconovino, onEachFeature: agregarPopupfarmacias});
	 plat= L.geoJson(alplato, { pointToLayer: crearIconoalplato, onEachFeature: agregarPopupfarmacias});
	 trag= L.geoJson(Tragos, { pointToLayer: crearIconococktail, onEachFeature: agregarPopupfarmacias});
	 past= L.geoJson(Pastas, { pointToLayer: crearIconopastas, onEachFeature: agregarPopupfarmacias});
	 pizz= L.geoJson(Pizza, { pointToLayer: crearIconopizza, onEachFeature: agregarPopupfarmacias});
	 pan= L.geoJson(Panaderia, { pointToLayer: crearIconopanaderia, onEachFeature: agregarPopupfarmacias});
	 carn= L.geoJson(Carnes, { pointToLayer: crearIconocarne, onEachFeature: agregarPopupfarmacias});
	 veg= L.geoJson(Vegano, { pointToLayer: crearIconovegano, onEachFeature: agregarPopupfarmacias});
	 alfj= L.geoJson(Alfajor, { pointToLayer: crearIconoalfajor, onEachFeature: agregarPopupfarmacias});

	 
	 	/* CREACIÓN DEL MAPA CON BASE LAYERS Y OVERLAYS */
	var map = L.map('map', {
			layers: [mapabase_argenmap,]
		}).setView([-32.8928, -68.8502], 13);

/* CREACIÓN DEL LAYERS CONTROL */
	var baseMaps = {
		"OpenTopoMap": mapabase_ot,
		 "Argenmap": mapabase_argenmap,

	};
	
	var overlayMaps = {
		        "Alfajor":alfj,
				"Al Plato":plat,
				"Cafeterías": cafe,
				"Carnes":carn,
				"Cervecerías": cerv,
				"Entre Panes":lomo,
				"Heladerías": hela,
				"Panadería-Pastelería":pan,
				"Pastas":past,
				"Pizza":pizz,
				"Sushi":sush,
				"Tragos":trag,
				"Vegetariano-Vegano":veg,
				"Vinos":vin,
									
                };

L.control.layers(baseMaps, overlayMaps).addTo(map);
L.control.scale().addTo(map);
L.control.polylineMeasure().addTo(map);

        
   	
</script>
  </body>
</html>
       

      
